local player = game.Players.LocalPlayer
local hrp = player.Character and player.Character:WaitForChild("HumanoidRootPart")
local TweenService = game:GetService("TweenService")

local checkpoints = {}

-- –°—é–¥–∞ –∑–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —á–µ–∫–ø–æ–∏–Ω—Ç–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä "Checkpoint", "Stage" –∏–ª–∏ "CP"
local checkpointKeyword = "Check"

-- –ò—â–µ–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—ä–µ–∫—Ç—ã
for _, obj in ipairs(workspace:GetDescendants()) do
    if obj:IsA("BasePart") and string.find(obj.Name:lower(), checkpointKeyword:lower()) then
        table.insert(checkpoints, obj)
    end
end

-- –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ Z (–∏–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
table.sort(checkpoints, function(a,b)
    return a.Position.Z < b.Position.Z
end)

print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–µ–∫–ø–æ–∏–Ω—Ç–æ–≤: "..#checkpoints)

-- –ù–∞–π—Ç–∏, –Ω–∞ –∫–∞–∫–æ–º –º—ã —Å–µ–π—á–∞—Å —á–µ–∫–ø–æ–∏–Ω—Ç–µ (–±–ª–∏–∂–∞–π—à–∏–π)
local startIndex = 1
local closestDist = math.huge
for i, cp in ipairs(checkpoints) do
    local dist = (hrp.Position - cp.Position).Magnitude
    if dist < closestDist then
        closestDist = dist
        startIndex = i
    end
end

-- –ù–∞—á–∞—Ç—å —Å —Å–ª–µ–¥—É—é—â–µ–≥–æ
local currentIndex = math.min(startIndex + 1, #checkpoints)

-- –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
local function moveTo(target)
    local goal = {}
    goal.CFrame = target.CFrame + Vector3.new(0, 5, 0) -- —á—É—Ç—å –≤—ã—à–µ

    local tween = TweenService:Create(hrp, TweenInfo.new(1, Enum.EasingStyle.Linear), goal)
    tween:Play()
    tween.Completed:Wait()
end

-- –ò–¥—ë–º –¥–∞–ª—å—à–µ –ø–æ —á–µ–∫–ø–æ–∏–Ω—Ç–∞–º
for i = currentIndex, #checkpoints do
    local cp = checkpoints[i]
    if cp and hrp and player.Character and player.Character.Parent then
        print("‚û° –ü–µ—Ä–µ–º–µ—â–∞—é—Å—å –∫ "..cp.Name)
        moveTo(cp)
        task.wait(0.2) -- –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É
    end
end

print("üéâ –í—Å–µ —á–µ–∫–ø–æ–∏–Ω—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
